{"version":3,"sources":["components/Header/Header.js","containers/Contact/Contact.js","store/actions/actionTypes.js","store/reducer/reducer.js","store/Provider/Provider.js","containers/Contacts/Contacts.js","components/Input/Input.js","containers/Contact/AddContact/AddContact.js","components/About/About.js","components/NotFound/NotFound.js","containers/Contact/EditContact/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","className","to","exact","defaultProps","Contact","state","showDetails","showDetailsHandler","setState","prevState","this","contact","name","email","phone","id","details","onClick","style","cursor","float","color","fontSize","delete","marginRight","Component","DELETE_CONTACT","ADD_CONTACT","UPDATE_CONTACT","reducer","action","type","actionTypes","contacts","filter","onDeleteHandler","concat","onAddHandler","update","forEach","res","index","onUpdateHandler","Context","React","createContext","Provider","dispatch","axios","get","then","data","value","children","Consumer","Contacts","deleteContactHandler","Fragment","map","key","bind","Input","classes","error","push","htmlFor","label","join","placeholder","onChange","inputValue","AddContact","errors","inputChangeHandler","event","persist","target","formSubmitHandler","preventDefault","post","console","log","history","onSubmit","About","NotFound","EditContact","match","params","put","App","basename","process","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2676c5ea.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nconst Header = (props) => {\n\n    const { branding } = props;\n    return (\n        <nav className=\"navbar navbar-expand bg-danger navbar-dark mb-3 py-3\">\n            <div className=\"container\">\n                <NavLink to=\"/\" exact className=\"navbar-brand\">{branding}</NavLink>\n            </div>\n            <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item\">\n                    <NavLink to=\"/\" exact className=\"nav-link\"><i className=\"fas fa-home\">Home</i></NavLink>\n                </li>\n                <li className=\"nav-item\">\n                    <NavLink to=\"/contact/add\" exact className=\"nav-link\"><i className=\"fas fa-plus\">\n                        Add</i></NavLink>\n                </li>\n                <li className=\"nav-item \">\n                    <NavLink to=\"/about\" exact className=\"nav-link\"><i className=\"fas fa-question\">\n                        About</i>\n                    </NavLink>\n                </li>\n            </ul>\n        </nav>\n    )\n\n}\n\nHeader.defaultProps = {\n    branding: \"Contact Manager\"\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nclass Contact extends Component {\n\n    state = {\n        showDetails: false\n    }\n\n    showDetailsHandler = () => {\n\n        this.setState((prevState) => {\n\n            return {\n                showDetails: !prevState.showDetails\n            }\n        })\n    }\n\n    render() {\n        const { name, email, phone, id } = this.props.contact;\n        let details = null;\n        if (this.state.showDetails) {\n            details = (<ul className=\"list-group\">\n                <li className=\"list-group-item\">{email}</li>\n                <li className=\"list-group-item\">{phone}</li>\n            </ul>);\n        }\n        return (\n            <div className=\"card card-body mb-3\" >\n                <h4>\n                    {name}\n                    <i className=\"fas fa-sort-down\"\n                        onClick={this.showDetailsHandler}\n                        style={{ cursor: 'pointer' }}\n                    />\n\n                    <i className=\"fas fa-trash-alt mr-2\"\n                        style={{ cursor: 'pointer', float: 'right', color: 'red', fontSize: '14px' }}\n                        onClick={() => this.props.delete(id)} />\n                    <Link to={`contact/edit/${id}`} >\n\n                        <i className=\"fas fa-pencil-alt\"\n                            style={{\n                                cursor: 'pointer',\n                                float: 'right', color: 'black',\n                                fontSize: '14px',\n                                marginRight: '1rem'\n                            }}>\n                        </i>\n                    </Link>\n                </h4>\n                {details}\n            </div>\n        )\n    }\n}\n\nContact.propTypes = {\n\n    contact: PropTypes.object.isRequired,\n}\nexport default Contact;","export const DELETE_CONTACT = \"DELETE_CONTACT\";\nexport const ADD_CONTACT = \"ADD_CONTACT\";\nexport const UPDATE_CONTACT = \"UPDATE_CONTACT\";\n","import * as actionTypes from '../actions/actionTypes';\n\n\nconst onDeleteHandler = (state, action) => {\n\n    return {\n        ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.id)\n    }\n\n}\n\nconst onAddHandler = (state, action) => {\n\n    return {\n        ...state,\n        contacts: state.contacts.concat(action.details)\n\n    }\n}\n\nconst onUpdateHandler = (state, action) => {\n\n    let update = state;\n    // console.log(action.details);\n    update.contacts.forEach((res, index) => {\n        if (res.id === action.details.id) {\n            update.contacts[index] = action.details;\n        }\n    });\n    return {\n        ...update\n    }\n}\n\n\n\nconst reducer = (state, action) => {\n\n    switch (action.type) {\n\n        case actionTypes.DELETE_CONTACT:\n            return (onDeleteHandler(state, action))\n\n        case actionTypes.ADD_CONTACT:\n            return (onAddHandler(state, action))\n\n        case actionTypes.UPDATE_CONTACT:\n            return (onUpdateHandler(state, action))\n\n\n\n        default:\n            return state;\n\n    }\n\n\n\n}\n\nexport default reducer;","import React, { Component } from 'react'\nimport reducer from '../reducer/reducer';\nimport axios from 'axios';\n\n\nconst Context = React.createContext();\n\nexport default class Provider extends Component {\n\n    state = {\n\n        contacts: [],\n        dispatch: action => this.setState(state => reducer(state, action))\n\n    };\n\n    componentDidMount() {\n        axios.get(\"https://jsonplaceholder.typicode.com/users\")\n            .then(res => this.setState({\n                ...this.state,\n                contacts: res.data\n            }))\n    }\n\n    render() {\n        return (\n\n            <Context.Provider value={this.state}>\n                {this.props.children}\n\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer; \n","import React, { Component } from 'react'\nimport Contact from '../Contact/Contact';\nimport { Consumer } from '../../store/Provider/Provider';\nimport * as actionTypes from '../../store/actions/actionTypes';\nimport axios from 'axios';\n\nclass Contacts extends Component {\n\n\n\n    deleteContactHandler = (id, dispatch) => {\n\n        axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n            .then(res => dispatch({ type: actionTypes.DELETE_CONTACT, id: id }));\n\n    }\n\n    render() {\n\n\n\n        return (\n            <Consumer>\n                {value => {\n                    const { contacts } = value;\n                    return (\n                        <React.Fragment>\n                            <h1 className=\"display-5 mb-2\"><span className=\"text-danger\">Contact  </span>List</h1>\n                            {\n                                contacts.map(contact => (\n                                    <Contact key={contact.id} contact={contact} delete={this.deleteContactHandler.bind(this, contact.id, value.dispatch)} />\n                                ))\n                            }\n                        </React.Fragment>\n                    )\n\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Contacts;","import React from 'react';\n\nfunction Input(props) {\n    const classes = [\"form-control form-control-lg\"];\n    if (props.error) {\n        classes.push(\"is-invalid\");\n    }\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={props.name}>{props.label}</label>\n            <input type={props.type} name={props.name}\n                className={classes.join(' ')}\n                value={props.value} placeholder={props.placeholder}\n                onChange={props.inputValue} />\n            {props.error ? (<div className=\"invalid-feedback\">{props.error}</div>) : null}\n        </div>\n\n    )\n}\nexport default Input;","import React, { Component } from 'react'\nimport Input from '../../../components/Input/Input';\nimport { Consumer } from '../../../store/Provider/Provider';\nimport * as actionTypes from '../../../store/actions/actionTypes';\nimport axios from 'axios';\nclass AddContact extends Component {\n\n    state = {\n\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    }\n\n    inputChangeHandler = (event) => {\n\n        event.persist()\n        this.setState(prevState => {\n            return {\n                ...prevState,\n                [event.target.name]: event.target.value,\n            }\n        })\n\n    }\n\n    formSubmitHandler = (dispatch, event) => {\n\n        event.preventDefault();\n        const { name, email, phone } = this.state;\n\n        const details = {\n            ...this.state\n        }\n\n        if (name === '') {\n            this.setState({ errors: { name: \"Name is Required\" } });\n            return;\n        }\n\n        if (email === '') {\n            this.setState({ errors: { email: \"Email is Required\" } });\n            return;\n        }\n\n        if (phone === '') {\n            this.setState({ errors: { phone: \"Phone is Required\" } });\n            return;\n        }\n\n        axios.post(\"https://jsonplaceholder.typicode.com/users\", details)\n            .then(res => dispatch({ type: actionTypes.ADD_CONTACT, details: res.data }));\n\n\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            id: '',\n            errors: {}\n        })\n\n        console.log(this.props);\n        this.props.history.push(\"/\");\n\n    }\n\n    render() {\n        const { name, email, phone, errors } = this.state;\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (<div className=\"card mb-3\">\n                        <div className=\"card-header\">Add Contact</div>\n                        <div className=\"card-body\">\n                            <form onSubmit={(event) => this.formSubmitHandler(dispatch, event)}>\n\n                                <Input type=\"text\" name=\"name\" label=\"Name\"\n                                    value={name} placeholder=\"Enter Name..\"\n                                    inputValue={(event) => this.inputChangeHandler(event)}\n                                    error={errors.name} />\n\n                                <Input type=\"email\" name=\"email\" label=\"Email\"\n                                    value={email} placeholder=\"Enter Email..\"\n                                    inputValue={(event) => this.inputChangeHandler(event)}\n                                    error={errors.email} />\n\n                                <Input type=\"text\" name=\"phone\" label=\"Phone\"\n                                    value={phone} placeholder=\"Enter Phone..\"\n                                    inputValue={(event) => this.inputChangeHandler(event)}\n                                    error={errors.phone} />\n\n                                <button className=\"btn btn-block btn-light\">ADD</button>\n                            </form>\n                        </div>\n                    </div>)\n                }\n                }\n            </Consumer>\n\n        )\n    }\n}\n\nexport default AddContact;","import React from 'react'\n\nexport default function About() {\n    return (\n        <div>\n            <h1 className=\"display-4\">Contact Manager</h1>\n            <p className=\"lead\">simple app to manage contacts</p>\n            <p className=\"text-primary\">version 1.0.0</p>\n        </div>\n    )\n}\n","import React from 'react'\n\nfunction NotFound() {\n    return (\n        <div>\n            <h1 className=\"display-4\"> <span className=\"text-danger\">404</span>Page Not Found</h1>\n            <p className=\"lead\">Sorry page does not exist</p>\n        </div>\n    )\n}\n\nexport default NotFound;","import React, { Component } from 'react'\nimport Input from '../../../components/Input/Input';\nimport { Consumer } from '../../../store/Provider/Provider';\nimport * as actionTypes from '../../../store/actions/actionTypes';\nimport axios from 'axios';\nclass EditContact extends Component {\n\n    state = {\n\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    }\n\n    async componentDidMount() {\n        const { id } = this.props.match.params;\n\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n        const contact = res.data;\n        console.log(\"contact\", contact);\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        })\n\n    }\n\n    inputChangeHandler = (event) => {\n\n        event.persist()\n        this.setState(prevState => {\n            return {\n                ...prevState,\n                [event.target.name]: event.target.value,\n            }\n        })\n\n    }\n\n    formSubmitHandler = (dispatch, event) => {\n\n        event.preventDefault();\n        const { name, email, phone } = this.state;\n        const { id } = this.props.match.params;\n        const details = {\n            ...this.state\n        }\n\n        if (name === '') {\n            this.setState({ errors: { name: \"Name is Required\" } });\n            return;\n        }\n\n        if (email === '') {\n            this.setState({ errors: { email: \"Email is Required\" } });\n            return;\n        }\n\n        if (phone === '') {\n            this.setState({ errors: { phone: \"Phone is Required\" } });\n            return;\n        }\n\n        axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, details)\n            .then(res => dispatch({ type: actionTypes.UPDATE_CONTACT, details: res.data }));\n\n\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            id: '',\n            errors: {}\n        })\n\n        this.props.history.push(\"/\");\n\n    }\n\n    render() {\n        const { name, email, phone, errors } = this.state;\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (<div className=\"card mb-3\">\n                        <div className=\"card-header\">Edit Contact</div>\n                        <div className=\"card-body\">\n                            <form onSubmit={(event) => this.formSubmitHandler(dispatch, event)}>\n\n                                <Input type=\"text\" name=\"name\" label=\"Name\"\n                                    value={name} placeholder=\"Enter Name..\"\n                                    inputValue={(event) => this.inputChangeHandler(event)}\n                                    error={errors.name} />\n\n                                <Input type=\"email\" name=\"email\" label=\"Email\"\n                                    value={email} placeholder=\"Enter Email..\"\n                                    inputValue={(event) => this.inputChangeHandler(event)}\n                                    error={errors.email} />\n\n                                <Input type=\"text\" name=\"phone\" label=\"Phone\"\n                                    value={phone} placeholder=\"Enter Phone..\"\n                                    inputValue={(event) => this.inputChangeHandler(event)}\n                                    error={errors.phone} />\n\n                                <button className=\"btn btn-block btn-light\">Edit Contact</button>\n                            </form>\n                        </div>\n                    </div>)\n                }\n                }\n            </Consumer>\n\n        )\n    }\n}\n\nexport default EditContact;","import React from 'react';\nimport Header from './components/Header/Header';\nimport Contacts from './containers/Contacts/Contacts';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Provider from './store/Provider/Provider';\nimport AddContact from './containers/Contact/AddContact/AddContact';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport About from './components/About/About';\nimport NotFound from './components/NotFound/NotFound';\nimport EditContact from './containers/Contact/EditContact/EditContact';\n\n\nfunction App() {\n  return (\n    <Provider>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </BrowserRouter>\n\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}